#!/usr/bin/env zsh
function getPipe {
  local dir

  if [ -n "$TMUX" -a -n "$TMUX_PANE" ];  then
    servername="t$(tmux list-panes -t "$TMUX_PANE" -F '#S' | head -n1)"
  else
    dir="$(git rev-parse --show-toplevel 2> /dev/null || pwd)"
    servername="s$(echo "$dir" | sed 's@/@..@g')"
  fi

  echo "/tmp/nvim-${servername}.pipe"
}

function getTTy {
  local pid="${1}"

  if [ "$pid" = "1" ]; then
    return
  fi

  local tty=$(ps -p "$pid" -o "tty" | tail -1 | sed 's@ *$@@g')

  if [ "$tty" = "??" -o "$tty" = "?" ]; then
    local ppid=$(ps -p "$pid" -o "ppid" | tail -1 | sed 's@ *$@@g')
    getTTy "$ppid"
    return
  fi

  echo $tty
}

function goToInstance {
  if [ -n "$TMUX" -a -n "$TMUX_PANE" ];  then
    local socket="${1}"
    local pid="$(lsof -t "$socket" | head -1)"
    if [ -z "$pid" ]; then
      return
    fi

    local tty=$(getTTy "$pid")

    if [ -z "tty" ]; then
      return
    fi
    local tmux_path=$(tmux list-panes -s -F'#I.#P,#{pane_tty}' | grep "$tty\$" | cut -d ',' -f1)

    if [ -z "$tmux_path" ]; then
      return
    fi

    tmux select-pane -t "$tmux_path" && tmux select-window -t "${tmux_path%%.*}"
  fi
}


socket="$(getPipe)"

if [ -e "$socket" ]; then
  if [ $# -gt 0 ]; then
    nvim --server "$socket" --remote-silent "$@"
  else
    echo "NVIM already running on $socket"
  fi

  goToInstance "$socket"
else
  nvim --listen "$socket" "$@"
fi
